//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrelloMVC.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CardResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CardResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TrelloMVC.Resources.CardResources", typeof(CardResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DueDate must be after CreationDate.
        /// </summary>
        internal static string CardCreationDateSuperiorToDueDate {
            get {
                return ResourceManager.GetString("CardCreationDateSuperiorToDueDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discription is mandatory.
        /// </summary>
        internal static string CardDiscpriptionIsNull {
            get {
                return ResourceManager.GetString("CardDiscpriptionIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discription is bigger than max value.
        /// </summary>
        internal static string CardDiscriptionBiggerThanMaxValue {
            get {
                return ResourceManager.GetString("CardDiscriptionBiggerThanMaxValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discription is mandatory.
        /// </summary>
        internal static string CardDiscriptionIsEmpty {
            get {
                return ResourceManager.GetString("CardDiscriptionIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discription has special characters.
        /// </summary>
        internal static string CardDiscriptionSpecialChars {
            get {
                return ResourceManager.GetString("CardDiscriptionSpecialChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Card index must be a positive number.
        /// </summary>
        internal static string CardIndexNegative {
            get {
                return ResourceManager.GetString("CardIndexNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name is bigger than max value.
        /// </summary>
        internal static string CardNameBiggerThanMaxValue {
            get {
                return ResourceManager.GetString("CardNameBiggerThanMaxValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name is mandatory.
        /// </summary>
        internal static string CardNameIsEmpty {
            get {
                return ResourceManager.GetString("CardNameIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name is mandatory.
        /// </summary>
        internal static string CardNameIsNull {
            get {
                return ResourceManager.GetString("CardNameIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name has special characters.
        /// </summary>
        internal static string CardNameSpecialChars {
            get {
                return ResourceManager.GetString("CardNameSpecialChars", resourceCulture);
            }
        }
    }
}
