@using PagedList.Mvc
@model PagedList.IPagedList<TrelloMVC.ViewModels.CardViewModels.CardViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create", new { boardid = ViewBag.BoardId, listid = ViewBag.ListId }, new { @class = "btn btn-success" })
</p>
<div class="panel panel-default">
    <div class="panel-heading">All Cards from List</div>
    <table class="table" id="Cards">
        <thead>
        <tr>
            <th>
                @Html.ActionLink("Index", "CardsOfList", new {boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, sortOrder = ViewBag.CixSortParm, currentFilter = ViewBag.CurrentFilter})
            </th>
            <th>
                @Html.ActionLink("Name", "CardsOfList", new {boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter})
            </th>
            <th>
                Discription
            </th>
            <th>
                @Html.ActionLink("Creation Date", "CardsOfList", new {boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, sortOrder = ViewBag.CDateSortParm, currentFilter = ViewBag.CurrentFilter})
            </th>
            <th>
                @Html.ActionLink("Due Date", "CardsOfList", new {boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, sortOrder = ViewBag.DueDateSortParm, currentFilter = ViewBag.CurrentFilter})
            </th>
            @*<th>
                Board Name
            </th>*@
            <th>
                List Name
            </th>
            <th>
                Operations
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Cix)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ListName)
                </td>
                @*<td>
                            @Html.DisplayFor(modelItem => item.BoardName)
                        </td>*@
                <td>
                    @Html.ActionLink("Edit", "Edit", new {id = item.Id}, new {@class = "btn btn-warning", @style = "margin: 5px;"})
                    @Html.ActionLink("Details", "Details", new {id = item.Id}, new {@class = "btn btn-info", @style = "margin: 5px;"})
                    @Html.ActionLink("Delete", "Delete", new {id = item.Id}, new {@class = "btn btn-danger", @style = "margin: 5px;"})
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("CardsOfList", new { boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
<div>
    @Html.ActionLink("Back to List", "Details", "List", new { boardid = @ViewBag.BoardId, id = @ViewBag.ListId }, new { @class = "btn btn-primary" })
</div>
