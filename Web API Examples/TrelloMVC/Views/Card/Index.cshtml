@using PagedList
@using PagedList.Mvc
@model Tuple<IEnumerable<TrelloMVC.ViewModels.CardViewModels.CardViewModel>, TrelloMVC.ViewModels.PaginationAux, TrelloMVC.ViewModels.CardViewModels.CardSortFilter>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create", new {boardid = ViewBag.BoardId, listid = ViewBag.ListId}, new {@class = "btn btn-success"})
</p>

<div style="padding: 7px 0 7px 0">
    @using (@Html.BeginForm("CardsOfList", "Card", FormMethod.Get))
    {
        <p>
            Find by Card Name: @Html.TextBox("SearchString", Model.Item3.CurrentFilter)
            <input type="submit" value="Search" class="btn btn-info" />
        </p>
    }
</div>

<div class="panel panel-default">
    <div class="panel-heading">All Cards from List</div>
    <table class="table" id="Cards">
        <thead>
        <tr>
            <th>
                @Html.ActionLink("Index", "CardsOfList", new { boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, sortOrder = Model.Item3.CixSortParm, currentFilter = Model.Item3.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Name", "CardsOfList", new { boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, sortOrder = Model.Item3.NameSortParm, currentFilter = Model.Item3.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Discription", "CardsOfList", new { boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, sortOrder = Model.Item3.DiscriptionSortParm, currentFilter = Model.Item3.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Creation Date", "CardsOfList", new { boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, sortOrder = Model.Item3.CDateSortParm, currentFilter = Model.Item3.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Due Date", "CardsOfList", new { boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, sortOrder = Model.Item3.DueDateSortParm, currentFilter = Model.Item3.CurrentFilter })
            </th>
            @*<th>
                Board Name
            </th>*@
            <th>
                List Name
            </th>
            <th>
                Operations
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Item1)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Cix)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ListName)
                </td>
                @*<td>
                            @Html.DisplayFor(modelItem => item.BoardName)
                        </td>*@
                <td>
                    @Html.ActionLink("Edit", "Edit", new {id = item.Id}, new {@class = "btn btn-warning", @style = "margin: 5px;"})
                    @Html.ActionLink("Details", "Details", new {id = item.Id}, new {@class = "btn btn-info", @style = "margin: 5px;"})
                    @Html.ActionLink("Delete", "Delete", new {id = item.Id}, new {@class = "btn btn-danger", @style = "margin: 5px;"})
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

@{
    var pagelist = new List<string>();
    for (var i = 0; i < Model.Item2.ElementsCount; i++)
    {
        pagelist.Add(string.Empty);
    }
}
<div>
    Page @Model.Item2.PageNumber of @Model.Item2.PageCount
    @Html.PagedListPager(pagelist.ToPagedList(Model.Item2.PageNumber, Model.Item2.PageSize), page => Url.Action("CardsOfList", new { boardid = @ViewBag.BoardId, listid = @ViewBag.ListId, page, sortOrder = Model.Item3.CurrentSort, currentFilter = Model.Item3.CurrentFilter }))
</div>
<div>
    @Html.ActionLink("Back to List", "Details", "List", new { boardid = @ViewBag.BoardId, id = @ViewBag.ListId }, new { @class = "btn btn-primary" })
</div>
